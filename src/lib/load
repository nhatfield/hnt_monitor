send_activity_counts() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_activity_create_challenge_15m of the miner
# TYPE ${project}_activity_create_challenge_15m gauge
${project}_activity_create_challenge_15m{instance="${name}"} ${activity_create_challenge_15m}
# HELP ${project}_activity_data_transfer_15m of the miner
# TYPE ${project}_activity_data_transfer_15m gauge
${project}_activity_data_transfer_15m{instance="${name}"} ${activity_data_transfer_15m}
# HELP ${project}_activity_create_challenge_1h of the miner
# TYPE ${project}_activity_create_challenge_1h gauge
${project}_activity_create_challenge_1h{instance="${name}"} ${activity_create_challenge_1h}
# HELP ${project}_activity_data_transfer_1h of the miner
# TYPE ${project}_activity_data_transfer_1h gauge
${project}_activity_data_transfer_1h{instance="${name}"} ${activity_data_transfer_1h}
# HELP ${project}_activity_create_challenge_1d of the miner
# TYPE ${project}_activity_create_challenge_1d gauge
${project}_activity_create_challenge_1d{instance="${name}"} ${activity_create_challenge_1d}
# HELP ${project}_activity_data_transfer_1d of the miner
# TYPE ${project}_activity_data_transfer_1d gauge
${project}_activity_data_transfer_1d{instance="${name}"} ${activity_data_transfer_1d}
# HELP ${project}_activity_create_challenge_7d of the miner
# TYPE ${project}_activity_create_challenge_7d gauge
${project}_activity_create_challenge_7d{instance="${name}"} ${activity_create_challenge_7d}
# HELP ${project}_activity_data_transfer_7d of the miner
# TYPE ${project}_activity_data_transfer_7d gauge
${project}_activity_data_transfer_7d{instance="${name}"} ${activity_data_transfer_7d}
# HELP ${project}_activity_create_challenge_30d of the miner
# TYPE ${project}_activity_create_challenge_30d gauge
${project}_activity_create_challenge_30d{instance="${name}"} ${activity_create_challenge_30d}
# HELP ${project}_activity_data_transfer_30d of the miner
# TYPE ${project}_activity_data_transfer_30d gauge
${project}_activity_data_transfer_30d{instance="${name}"} ${activity_data_transfer_30d}
EOF

    log_info "[Hotspot activity] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_activity_challenged_beacon_count() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_activity_challenged_beacon_15m of the miner
# TYPE ${project}_activity_challenged_beacon_15m gauge
${project}_activity_challenged_beacon_15m{instance="${name}"} ${activity_challenged_beacon_15m}
# HELP ${project}_activity_challenged_beacon_witnesses_success_15m of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_success_15m gauge
${project}_activity_challenged_beacon_witnesses_success_15m{instance="${name}"} ${activity_challenged_beacon_witnesses_success_15m}
# HELP ${project}_activity_challenged_beacon_witnesses_failed_15m of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_failed_15m gauge
${project}_activity_challenged_beacon_witnesses_failed_15m{instance="${name}"} ${activity_challenged_beacon_witnesses_failed_15m}
# HELP ${project}_activity_challenged_beacon_1h of the miner
# TYPE ${project}_activity_challenged_beacon_1h gauge
${project}_activity_challenged_beacon_1h{instance="${name}"} ${activity_challenged_beacon_1h}
# HELP ${project}_activity_challenged_beacon_witnesses_success_1h of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_success_1h gauge
${project}_activity_challenged_beacon_witnesses_success_1h{instance="${name}"} ${activity_challenged_beacon_witnesses_success_1h}
# HELP ${project}_activity_challenged_beacon_witnesses_failed_1h of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_failed_1h gauge
${project}_activity_challenged_beacon_witnesses_failed_1h{instance="${name}"} ${activity_challenged_beacon_witnesses_failed_1h}
# HELP ${project}_activity_challenged_beacon_1d of the miner
# TYPE ${project}_activity_challenged_beacon_1d gauge
${project}_activity_challenged_beacon_1d{instance="${name}"} ${activity_challenged_beacon_1d}
# HELP ${project}_activity_challenged_beacon_witnesses_success_1d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_success_1d gauge
${project}_activity_challenged_beacon_witnesses_success_1d{instance="${name}"} ${activity_challenged_beacon_witnesses_success_1d}
# HELP ${project}_activity_challenged_beacon_witnesses_failed_1d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_failed_1d gauge
${project}_activity_challenged_beacon_witnesses_failed_1d{instance="${name}"} ${activity_challenged_beacon_witnesses_failed_1d}
# HELP ${project}_activity_challenged_beacon_7d of the miner
# TYPE ${project}_activity_challenged_beacon_7d gauge
${project}_activity_challenged_beacon_7d{instance="${name}"} ${activity_challenged_beacon_7d}
# HELP ${project}_activity_challenged_beacon_witnesses_success_7d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_success_7d gauge
${project}_activity_challenged_beacon_witnesses_success_7d{instance="${name}"} ${activity_challenged_beacon_witnesses_success_7d}
# HELP ${project}_activity_challenged_beacon_witnesses_failed_7d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_failed_7d gauge
${project}_activity_challenged_beacon_witnesses_failed_7d{instance="${name}"} ${activity_challenged_beacon_witnesses_failed_7d}
# HELP ${project}_activity_challenged_beacon_30d of the miner
# TYPE ${project}_activity_challenged_beacon_30d gauge
${project}_activity_challenged_beacon_30d{instance="${name}"} ${activity_challenged_beacon_30d}
# HELP ${project}_activity_challenged_beacon_witnesses_success_30d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_success_30d gauge
${project}_activity_challenged_beacon_witnesses_success_30d{instance="${name}"} ${activity_challenged_beacon_witnesses_success_30d}
# HELP ${project}_activity_challenged_beacon_witnesses_failed_30d of the miner
# TYPE ${project}_activity_challenged_beacon_witnesses_failed_30d gauge
${project}_activity_challenged_beacon_witnesses_failed_30d{instance="${name}"} ${activity_challenged_beacon_witnesses_failed_30d}
EOF

    log_info "[Activity Challenged Beacons] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_activity_sent_beacon_count() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_activity_sent_beacon_15m of the miner
# TYPE ${project}_activity_sent_beacon_15m gauge
${project}_activity_sent_beacon_15m{instance="${name}"} ${activity_sent_beacon_15m}
# HELP ${project}_activity_sent_beacon_witnesses_success_15m of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_success_15m gauge
${project}_activity_sent_beacon_witnesses_success_15m{instance="${name}"} ${activity_sent_beacon_witnesses_success_15m}
# HELP ${project}_activity_sent_beacon_witnesses_failed_15m of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_failed_15m gauge
${project}_activity_sent_beacon_witnesses_failed_15m{instance="${name}"} ${activity_sent_beacon_witnesses_failed_15m}
# HELP ${project}_activity_sent_beacon_1h of the miner
# TYPE ${project}_activity_sent_beacon_1h gauge
${project}_activity_sent_beacon_1h{instance="${name}"} ${activity_sent_beacon_1h}
# HELP ${project}_activity_sent_beacon_witnesses_success_1h of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_success_1h gauge
${project}_activity_sent_beacon_witnesses_success_1h{instance="${name}"} ${activity_sent_beacon_witnesses_success_1h}
# HELP ${project}_activity_sent_beacon_witnesses_failed_1h of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_failed_1h gauge
${project}_activity_sent_beacon_witnesses_failed_1h{instance="${name}"} ${activity_sent_beacon_witnesses_failed_1h}
# HELP ${project}_activity_sent_beacon_1d of the miner
# TYPE ${project}_activity_sent_beacon_1d gauge
${project}_activity_sent_beacon_1d{instance="${name}"} ${activity_sent_beacon_1d}
# HELP ${project}_activity_sent_beacon_witnesses_success_1d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_success_1d gauge
${project}_activity_sent_beacon_witnesses_success_1d{instance="${name}"} ${activity_sent_beacon_witnesses_success_1d}
# HELP ${project}_activity_sent_beacon_witnesses_failed_1d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_failed_1d gauge
${project}_activity_sent_beacon_witnesses_failed_1d{instance="${name}"} ${activity_sent_beacon_witnesses_failed_1d}
# HELP ${project}_activity_sent_beacon_7d of the miner
# TYPE ${project}_activity_sent_beacon_7d gauge
${project}_activity_sent_beacon_7d{instance="${name}"} ${activity_sent_beacon_7d}
# HELP ${project}_activity_sent_beacon_witnesses_success_7d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_success_7d gauge
${project}_activity_sent_beacon_witnesses_success_7d{instance="${name}"} ${activity_sent_beacon_witnesses_success_7d}
# HELP ${project}_activity_sent_beacon_witnesses_failed_7d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_failed_7d gauge
${project}_activity_sent_beacon_witnesses_failed_7d{instance="${name}"} ${activity_sent_beacon_witnesses_failed_7d}
# HELP ${project}_activity_sent_beacon_30d of the miner
# TYPE ${project}_activity_sent_beacon_30d gauge
${project}_activity_sent_beacon_30d{instance="${name}"} ${activity_sent_beacon_30d}
# HELP ${project}_activity_sent_beacon_witnesses_success_30d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_success_30d gauge
${project}_activity_sent_beacon_witnesses_success_30d{instance="${name}"} ${activity_sent_beacon_witnesses_success_30d}
# HELP ${project}_activity_sent_beacon_witnesses_failed_30d of the miner
# TYPE ${project}_activity_sent_beacon_witnesses_failed_30d gauge
${project}_activity_sent_beacon_witnesses_failed_30d{instance="${name}"} ${activity_sent_beacon_witnesses_failed_30d}
EOF

    log_info "[Activity Sent Beacon] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_billing_balance() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}
# HELP ${project}_${name}_balance of your account
# TYPE ${project}_${name}_balance gauge
${project}_${name}_balance{instance="${name}",clientId="${client_id}"} ${total_balance}
EOF

    log_info "[Billing balance] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}"
  fi
}

send_billing_count() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}_${tag}
# HELP ${project}_${name}_count of miners
# TYPE ${project}_${name}_count gauge
${project}_${name}_count{instance="${name}",clientId="${client_id}",miner="${tag}"} ${billing_count}
EOF

    log_info "[Billing count] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}_${tag}"
  fi
}

send_billing_processing() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}
# HELP ${project}_${name}_total number of miners
# TYPE ${project}_${name}_total gauge
${project}_${name}_total{instance="${name}",clientId="${client_id}"} ${billing_total}
# HELP ${project}_${name}_extra number of miners .1 HNT per
# TYPE ${project}_${name}_extra gauge
${project}_${name}_extra{instance="${name}",clientId="${client_id}"} ${billing_extras}
# HELP ${project}_${name}_month_pay based on miner total
# TYPE ${project}_${name}_month_pay gauge
${project}_${name}_month_pay{instance="${name}",clientId="${client_id}"} ${month_pay}
EOF

    log_info "[Billing processing] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}_${client_id}"
  fi
}

send_block_height() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name}_block_height helium block height
# TYPE ${project}_${name}_block_height gauge
${project}_${name}_block_height{instance="${name}"} ${height}
EOF

    log_info "[Block height] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_miner_bobcat_status() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_sync_status of the bobcat synced to blockchain 0: synching, 1: syncd
# TYPE ${project}_sync_status gauge
${project}_sync_status{instance="${name}",miner="bobcat"} ${sync_status}
# HELP ${project}_height_gap of the bobcat height to blockchain
# TYPE ${project}_height_gap gauge
${project}_height_gap{instance="${name}",miner="bobcat"} ${gap}
# HELP ${project}_miner_height of the bobcat miner
# TYPE ${project}_miner_height gauge
${project}_miner_height{instance="${name}",miner="bobcat"} ${miner_height}
# HELP ${project}_block_height of the helium network from miner perspective
# TYPE ${project}_block_height gauge
${project}_block_height{instance="${name}",miner="bobcat"} ${block_height}
# HELP ${project}_status_epoch of the bobcat miner
# TYPE ${project}_status_epoch gauge
${project}_status_epoch{instance="${name}",miner="bobcat"} ${epoch}
EOF

    log_info "[Status] data push to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_miner_bobcat_temp() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_cpu_temperature of the bobcat miner cpu
# TYPE ${project}_cpu_temperature gauge
${project}_cpu_temperature{instance="${name}",miner="bobcat",core="0"} ${temp0}
${project}_cpu_temperature{instance="${name}",miner="bobcat",core="1"} ${temp1}
# HELP ${project}_response_time of the miner -1: unreachable
# TYPE ${project}_response_time gauge
${project}_miner_response_time{instance="${name}",miner="bobcat"} ${miner_response_time}
EOF

    log_info "[Temperature] data push to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_miner_longap_data() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_sync_status of the longap miner synced to blockchain 0: synching, 1: syncd
# TYPE ${project}_sync_status gauge
${project}_sync_status{instance="${name}",miner="longap"} ${sync_status}
# HELP ${project}_block_height of the longap miner
# TYPE ${project}_block_height gauge
${project}_block_height{instance="${name}",miner="longap"} ${block_height}
# HELP ${project}_miner_height of the longap miner
# TYPE ${project}_miner_height gauge
${project}_miner_height{instance="${name}",miner="longap"} ${miner_height}
# HELP ${project}_block_connected status of the longap miner to blockchain. 0: not connected, 1: connected
# TYPE ${project}_block_connected gauge
${project}_block_connected{instance="${name}",miner="longap"} ${block_connected}
# HELP ${project}_height_gap of the longap height to blockchain
# TYPE ${project}_height_gap gauge
${project}_height_gap{instance="${name}",miner="longap"} ${gap}
EOF

    log_info "[Miner] sata pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_miner_nebra_data() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_block_height of the helium network
# TYPE ${project}_block_height gauge
${project}_block_height{instance="${name}",miner="nebra"} ${block_height}
# HELP ${project}_frequency of the nebra antenna
# TYPE ${project}_frequency gauge
${project}_frequency{instance="${name}",miner="nebra"} ${frequency}
# HELP ${project}_miner_height of the nebra miner
# TYPE ${project}_miner_height gauge
${project}_miner_height{instance="${name}",miner="nebra"} ${miner_height}
# HELP ${project}_sync_status of the nebra miner synced to blockchain 0: synching, 1: syncd
# TYPE ${project}_sync_status gauge
${project}_miner_sync_status{instance="${name}",miner="nebra"} ${sync_status}
# HELP ${project}_sync_percent of the nebra miner synced to blockchain
# TYPE ${project}_sync_percent gauge
${project}_miner_sync_percent{instance="${name}",miner="nebra"} ${sync_percent}
# HELP ${project}_bluetooth_connected on the nebra miner 0: no 1: yes
# TYPE ${project}_bluetooth_connected gauge
${project}_bluetooth_connected{instance="${name}",miner="nebra"} ${bluetooth_connected}
# HELP ${project}_lora_status of the nebra miner
# TYPE ${project}_lora_status gauge
${project}_lora_status{instance="${name}",miner="nebra"} ${lora_status}
# HELP ${project}_miner_connected status of the nebra miner to p2p network 0: no 1: yes
# TYPE ${project}_miner_connected gauge
${project}_miner_connected{instance="${name}",miner="nebra"} ${miner_connected}
# HELP ${project}_height_gap of the nebra height to blockchain
# TYPE ${project}_height_gap gauge
${project}_height_gap{instance="${name}",miner="nebra"} ${gap}
# HELP ${project}_response_time of the miner -1: unreachable
# TYPE ${project}_response_time gauge
${project}_miner_response_time{instance="${name}",miner="nebra"} ${miner_response_time}
EOF

    log_info "[Miner] data push to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_miner_sensecap_data() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_cpu_temperature of the sensecap miner cpu
# TYPE ${project}_cpu_temperature gauge
${project}_cpu_temperature{instance="${name}",miner="sensecap"} ${cputemp}
# HELP ${project}_cpu_used of the sensecap miner
# TYPE ${project}_cpu_used gauge
${project}_cpu_used{instance="${name}",miner="sensecap"} ${cpuused}
# HELP ${project}_memory_total of the sensecap miner
# TYPE ${project}_memory_total gauge
${project}_memory_total{instance="${name}",miner="sensecap"} ${memtotal}
# HELP ${project}_memory_used of the sensecap miner
# TYPE ${project}_memory_used gauge
${project}_memory_used{instance="${name}",miner="sensecap"} ${memused}
# HELP ${project}_sd_total of the sensecap miner
# TYPE ${project}_sd_total gauge
${project}_sd_total{instance="${name}",miner="sensecap"} ${sdtotal}
# HELP ${project}_sd_used of the sensecap miner
# TYPE ${project}_sd_used gauge
${project}_sd_used{instance="${name}",miner="sensecap"} ${sdused}
# HELP ${project}_antenna_gain of the sensecap miner
# TYPE ${project}_antenna_gain gauge
${project}_antenna_gain{instance="${name}",miner="sensecap"} ${gain}
# HELP ${project}_is_healthy status of the sensecap miner 1: yes, 2: no
# TYPE ${project}_is_healthy gauge
${project}_is_healthy{instance="${name}",miner="sensecap"} ${healthy}
# HELP ${project}_block_height of helium blockchain
# TYPE ${project}_block_height gauge
${project}_block_height{instance="${name}",miner="sensecap"} ${block_height}
# HELP ${project}_miner_height of the sensecap miner
# TYPE ${project}_miner_height gauge
${project}_miner_height{instance="${name}",miner="sensecap"} ${miner_height}
# HELP ${project}_p2p_connected status of the sensecap miner P2P Outbound Status. -1: unknown, 0: unhealthy, 1: healthy
# TYPE ${project}_p2p_connected gauge
${project}_p2p_connected{instance="${name}",miner="sensecap"} ${p2p_connected}
# HELP ${project}_dialable status of the sensecap miner P2P Inbound Status. -1: unknown, 0: unhealthy, 1: healthy
# TYPE ${project}_dialable gauge
${project}_dialable{instance="${name}",miner="sensecap"} ${dialable}
# HELP ${project}_nat_type of the WAN/LAN connection -1: unknown, 0: none, 1: static, 2: symmetric, 3: restricted
# TYPE ${project}_nat_type gauge
${project}_nat_type{instance="${name}",miner="sensecap"} ${nattype}
# HELP ${project}_height_gap of the sensecap height to blockchain
# TYPE ${project}_height_gap gauge
${project}_height_gap{instance="${name}",miner="sensecap"} ${gap}
# HELP ${project}_sync_status of the sensecap miner synced to blockchain 0: synching, 1: syncd
# TYPE ${project}_sync_status gauge
${project}_sync_status{instance="${name}",miner="sensecap"} ${sync_status}
# HELP ${project}_response_time of the miner -1: unreachable
# TYPE ${project}_response_time gauge
${project}_miner_response_time{instance="${name}",miner="sensecap"} ${miner_response_time}
EOF

    log_info "[Miner] data push to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_relayed_status() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_relayed_status of the miner 0: relayed, 1: not relayed
# TYPE ${project}_relayed_status gauge
${project}_relayed_status{instance="${name}"} ${relayed_status}
EOF
    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_online_status() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_online_status of the miner 0: offline, 1: online
# TYPE ${project}_online_status gauge
${project}_online_status{instance="${name}"} ${online_status}
EOF
    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_reward_counts() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_reward_15m total rewards count 15 minutes
# TYPE ${project}_reward_15m gauge
${project}_reward_15m{instance="${name}",address="${a}"} ${rewards_15m}
# HELP ${project}_reward_1h total rewards count by hour
# TYPE ${project}_reward_1h gauge
${project}_reward_1h{instance="${name}",address="${a}"} ${rewards_1h}
# HELP ${project}_reward_1d total rewards count in a day
# TYPE ${project}_reward_1d gauge
${project}_reward_1d{instance="${name}",address="${a}"} ${rewards_1d}
# HELP ${project}_reward_7d total rewards count in 7 days
# TYPE ${project}_reward_7d gauge
${project}_reward_7d{instance="${name}",address="${a}"} ${rewards_7d}
# HELP ${project}_reward_30d total rewards count in 30 days
# TYPE ${project}_reward_30d gauge
${project}_reward_30d{instance="${name}",address="${a}"} ${rewards_30d}
EOF

    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_reward_earned() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_reward_earned_15m total rewards earned 15 minutes
# TYPE ${project}_reward_earned_15m gauge
${project}_reward_earned_15m{instance="${name}",address="${a}"} ${rewards_earned_15m}
# HELP ${project}_reward_earned_1h total rewards earned by hour
# TYPE ${project}_reward_earned_1h gauge
${project}_reward_earned_1h{instance="${name}",address="${a}"} ${rewards_earned_1h}
# HELP ${project}_reward_earned_1d total rewards earned in a day
# TYPE ${project}_reward_earned_1d gauge
${project}_reward_earned_1d{instance="${name}",address="${a}"} ${rewards_earned_1d}
# HELP ${project}_reward_earned_7d total rewards earned in 7 days
# TYPE ${project}_reward_earned_7d gauge
${project}_reward_earned_7d{instance="${name}",address="${a}"} ${rewards_earned_7d}
# HELP ${project}_reward_earned_30d total rewards earned in 30 days
# TYPE ${project}_reward_earned_30d gauge
${project}_reward_earned_30d{instance="${name}",address="${a}"} ${rewards_earned_30d}
EOF

    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_reward_scale() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_reward_scale based on hex and nearby miners
# TYPE ${project}_reward_scale gauge
${project}_reward_scale{instance="${name}",address="${a}"} ${scale}
EOF

    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_system_metrics() {
  get_curl_options
  if [ "${pg_admin_host}" ]; then
    log_info "Sending data to prometheus pushgateway ${pg_admin_host}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pg_admin_host}/metrics/job/${project}_system_metrics
# HELP ${project}_log_info_count of the hnt monitor container
# TYPE ${project}_log_info_count gauge
${project}_log_info_count{instance="$(hostname)",system_tag="${system_tag}"} ${info_count}
# HELP ${project}_log_warn_count of the hnt monitor container
# TYPE ${project}_log_warn_count gauge
${project}_log_warn_count{instance="$(hostname)",system_tag="${system_tag}"} ${warn_count}
# HELP ${project}_log_err_count of the hnt monitor container
# TYPE ${project}_log_err_count gauge
${project}_log_err_count{instance="$(hostname)",system_tag="${system_tag}"} ${err_count}
EOF

    log_info "[system] data pushed to ${pg_admin_host}/metrics/job/${project}_system"
  fi
}

send_witnessed_count() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_witnessed_15m miners
# TYPE ${project}_witnessed_15m gauge
${project}_witnessed_15m{instance="${name}",address="${a}"} ${activity_witnessed_beacon_15m}
# HELP ${project}_witnessed_1h miners
# TYPE ${project}_witnessed_1h gauge
${project}_witnessed_1h{instance="${name}",address="${a}"} ${activity_witnessed_beacon_1h}
# HELP ${project}_witnessed_1d miners
# TYPE ${project}_witnessed_1d gauge
${project}_witnessed_1d{instance="${name}",address="${a}"} ${activity_witnessed_beacon_1d}
# HELP ${project}_witnessed_7d miners
# TYPE ${project}_witnessed_7d gauge
${project}_witnessed_7d{instance="${name}",address="${a}"} ${activity_witnessed_beacon_7d}
# HELP ${project}_witnessed_30d miners
# TYPE ${project}_witnessed_30d gauge
${project}_witnessed_30d{instance="${name}",address="${a}"} ${activity_witnessed_beacon_30d}
EOF

    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}

send_witnesses_count() {
  get_curl_options
  if [ "${pghost}" ] && [ ! "${name}" == "unknown" ]; then
    log_info "Sending data to prometheus pushgateway ${pghost}"
    cat <<EOF | curl ${curl_options} -H "apikey: ${client_api_key}" --data-binary @- ${pghost}/metrics/job/${project}_${name//-/_}
# HELP ${project}_witnesses miners
# TYPE ${project}_witnesses gauge
${project}_witnesses{instance="${name}",address="${a}"} ${witnesses_count}
EOF

    log_info "[${a}] data pushed to ${pghost}/metrics/job/${project}_${name//-/_}"
  fi
}
