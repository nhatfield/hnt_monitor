#!/usr/bin/env bash

set -euo pipefail

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

OPT=${1:-"run"}
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
cd ${DIR}

# Set libs
for l in ../lib/*; do
  . "${l}"
done

id=main
init=true

#####################
# Set system metrics
#
info_count=0
warn_count=0
err_count=0

set_home
get_configs
get_curl_options

make_dir ${logpath}
make_dir ${data_dir}

log_info "initializing hnt monitor version [$(grep '#' /HISTORY.md 2>/dev/null | sed 's%# %%' | sort -V | tail -1)]"
send_addresses_elasticsearch
sleep 5

log_info "removing stale locks"
rm_locks

run() {
  while true; do
    global_day=$(date +%Y-%m-%d)
    # Set libs
    for l in ../lib/*; do
      . "${l}"
    done
    get_configs   
    get_addresses

    if [ "${init}" == "true" ] && [ "${collector_backfill_enabled}" == "true" ]; then
      when="5 days ago"
    else
      when=
    fi

    if [ "${collector_enabled}" == "true" ]; then
      run_collector
    else
      init=false
      log_debug "collection disabled. setting initialize to [false]"
    fi

    if [ "${init}" == "false" ]; then
      if [ "${etl_enabled}" == "true" ]; then
        run_etl
      fi
      run_system
    else
      log_info "allowing collections to finish before processesing data"
      sleep 10
      init=false
      log_info "setting initialize to [false]"
    fi

    sleep ${master_schedule}
    send_system_metrics
  done
}

case ${OPT} in
           start|run)
             run
             ;;
           *)
             echo "invalid argument"
             ;;
esac
